************************************************************Python***************************************************************************

## What is Python?

✅ **Python is a high-level, general-purpose programming language** known for:

* Easy-to-read, clean syntax
* Powerful standard libraries
* Strong community support
* Wide applicability (web, automation, data science, AI, testing)

---

## Key Features

✨ **Simple and Readable**
Python code looks like English, making it easier to learn and debug.

✨ **Interpreted Language**
Runs line-by-line, making it easy to test and debug without compiling.

✨ **Dynamically Typed**
You don’t need to declare variable types explicitly.

✨ **Object-Oriented and Functional**
Supports OOP (classes, objects, inheritance) and functional programming (lambda, map, filter).

✨ **Extensive Libraries**
Has libraries for:

* Automation (`playwright`, `selenium`, `pytest`)
* Web development (`django`, `flask`, `fastapi`)
* Data science (`pandas`, `numpy`, `scikit-learn`, `matplotlib`)
* Machine learning (`tensorflow`, `pytorch`)
* APIs (`requests`, `httpx`)

✨ **Cross-Platform**
Runs on Windows, macOS, and Linux without modification.

---

## Example Python Code

```python
# Simple Python program
def greet(name):
    print(f"Hello, {name}!")

greet("Manojna")
```

✅ Output:

```
Hello, Manojna!
```

---

## What is Python used for?

✅ **Web Development** (Django, Flask)
✅ **Automation / Testing** (Playwright, Selenium, Pytest)
✅ **Data Science & Machine Learning** (Pandas, Scikit-learn)
✅ **Scripting** (File handling, automation tasks)
✅ **Game Development** (Pygame)
✅ **APIs and Backend Services**
✅ **IoT and Robotics** (MicroPython, Raspberry Pi)

---

## Why should you learn Python?

✅ **Beginner-friendly** with high demand in the industry
✅ **Widely used in QA Automation (your current domain)**
✅ **Enhances career opportunities** in SDET, Test Automation, Data Testing
✅ Enables **faster prototyping** and testing of ideas.

